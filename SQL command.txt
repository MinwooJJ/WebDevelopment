psql -U postgres

\c test --> 연결
\d --> DB에 어떤것이 있는지 보여줌
\q --> 터미널로 나가기

CREATE TABLE table_name (column_1 datatype, column_2 datatype, column_3 datatype); 
INSERT INTO table_name (column_1, column_2, column_3) VALUES (value_1, value_2, value_3);
ALTER TABLE table_name ADD column datatype;
SELECT column_1, column_2, column_3 FROM table_name
SELECT * FROM table_name

UPDATE table_name
SET some_column = some_value
WHERE some_column = some_value
한 꺼번에 여러 사람에게 넣고 싶을때는 WHERE 사이에 OR

SELECT * FROM users WHERE name LIKE 'A%'; --> A로 시작하는 이름 전부다 가져와라
SELECT * FROM users WHERE name LIKE '%Y'; --> Y로 끝나는 이름 전부다 가져와라
SELECT * FROM users ORDER BY score DESC; --> score 높은 순으로 정렬
SELECT * FROM users ORDER BY score ASC--> score 낮은 순으로 정렬

SQL function
SELECT AVG(score) FROM users; --> score의 평균 값
SELECT SUM(score) FROM users; --> score의 합
SELECT COUNT(name) FROM users; --> 유저 총 숫자

CREATE TABLE login (
  ID serial NOT NULL PRIMARY KEY, --> ID는 primary key is always uniqe to each row
  secret VARCHAR (100) NOT NULL, --> hash key
  name text UNIQUE NOT NULL --> UNIQUE 중복 불가
); --> Primary key 생성 시 자동으로 _id_seq 파일을 생성하며 빠르게 접근 할 목적으로 생성 됨


INSERT INTO login (secret, name) VALUES ('abc', 'minwoo');

users, login 2개의 table 존재
2 table에 겹치는 value가 있을 경우 서로 연결하여 데이터를 가져오는 것이 가능(Primary and Foreign keys) 
SELECT * FROM users JOIN login ON users.name = login.name; --> table 연결

DELETE FROM users WHERE name='Sally'; --> 정보삭제
DROP TABLE table_name; --> table 삭제



CREATE TABLE users (
	id serial PRIMARY KEY,
	name VARCHAR(100),
	email text UNIQUE NOT NULL,
	entries BIGINT DEFAULT 0,
	joined TIMESTAMP NOT NULL
);


